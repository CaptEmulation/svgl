#ifndef __svg_SVGRadialGradientElement__
#define __svg_SVGRadialGradientElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
	class Context;
	class GLInfo;
}

#include <w3c/svg/SVGGradientElement.hpp>
#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/SVGAnimatedLength.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGRadialGradientElement_element_string;
}

namespace svg {
	class SVGRadialGradientElement :
		public SVGGradientElement {
	public:
	protected:
		Attribute< SVGAnimatedLength > cx;
		Attribute< SVGAnimatedLength > cy;
		Attribute< SVGAnimatedLength > r;
		Attribute< SVGAnimatedLength > fx;
		Attribute< SVGAnimatedLength > fy;
	public:
		const Attribute< SVGAnimatedLength >& dom_getCx() const { return cx; }

		const Attribute< SVGAnimatedLength >& dom_getCy() const { return cy; }

		const Attribute< SVGAnimatedLength >& dom_getR() const { return r; }

		const Attribute< SVGAnimatedLength >& dom_getFx() const { return fx; }

		const Attribute< SVGAnimatedLength >& dom_getFy() const { return fy; }

	public:
		const SVGLength & getCx() const { return cx.getValue().getAnimatedVal().getValue(); }
		void setCx(const SVGLength& n)  { cx.getValue().getAnimatedVal().setValue(n); cx.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLength & getCy() const { return cy.getValue().getAnimatedVal().getValue(); }
		void setCy(const SVGLength& n)  { cy.getValue().getAnimatedVal().setValue(n); cy.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLength & getR() const { return r.getValue().getAnimatedVal().getValue(); }
		void setR(const SVGLength& n)  { r.getValue().getAnimatedVal().setValue(n); r.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLength & getFx() const { return fx.getValue().getAnimatedVal().getValue(); }
		void setFx(const SVGLength& n)  { fx.getValue().getAnimatedVal().setValue(n); fx.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLength & getFy() const { return fy.getValue().getAnimatedVal().getValue(); }
		void setFy(const SVGLength& n)  { fy.getValue().getAnimatedVal().setValue(n); fy.getValue().getBaseVal().setValue(n);  setDamaged(true); }


		SVGRadialGradientElement(dom::Document *);
		void glPreTraverse(svgl::Context*, svgl::GLInfo* glinfo);
		void glPostTraverse(svgl::Context*, svgl::GLInfo* glinfo, float x, float y, float width, float height);
	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGRadialGradientElement();
		virtual const String getDtdElement() const { return SVGRadialGradientElement_element_string; }
	};
}


#endif // __svg_SVGRadialGradientElement__
