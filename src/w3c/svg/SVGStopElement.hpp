#ifndef __svg_SVGStopElement__
#define __svg_SVGStopElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
}

#include <w3c/svg/SVGElement.hpp>
#include <w3c/svg/SVGStylable.hpp>
#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/SVGAnimatedLength.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGStopElement_element_string;
}

namespace svg {
	class SVGStopElement :
		public SVGElement,
		public SVGStylable {
	public:
	protected:
		Attribute< SVGAnimatedLength > offset;
	public:
		const Attribute< SVGAnimatedLength >& dom_getOffset() const { return offset; }

	public:
		const SVGLength & getOffset() const { return offset.getValue().getAnimatedVal().getValue(); }
		void setOffset(const SVGLength& n)  { offset.getValue().getAnimatedVal().setValue(n); offset.getValue().getBaseVal().setValue(n);  setDamaged(true); }

	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGStopElement();
		virtual const String getDtdElement() const { return SVGStopElement_element_string; }
		SVGStopElement(dom::Document* doc) : SVGElement(doc, SVGStopElement_element_string) {}
	};
}


#endif // __svg_SVGStopElement__
