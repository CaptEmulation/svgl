#ifndef __svg_SVGTextPositioningElement__
#define __svg_SVGTextPositioningElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
}

#include <w3c/svg/SVGTextContentElement.hpp>
#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/SVGAnimatedLengthList.hpp>
#include <w3c/svg/SVGAnimatedNumberList.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
	class SVGTextPositioningElement :
		public SVGTextContentElement {
	public:
	protected:
		Attribute< SVGAnimatedLengthList > x;
		Attribute< SVGAnimatedLengthList > y;
		Attribute< SVGAnimatedLengthList > dx;
		Attribute< SVGAnimatedLengthList > dy;
		Attribute< SVGAnimatedNumberList > rotate;
	public:
		const Attribute< SVGAnimatedLengthList >& dom_getX() const { return x; }

		const Attribute< SVGAnimatedLengthList >& dom_getY() const { return y; }

		const Attribute< SVGAnimatedLengthList >& dom_getDx() const { return dx; }

		const Attribute< SVGAnimatedLengthList >& dom_getDy() const { return dy; }

		const Attribute< SVGAnimatedNumberList >& dom_getRotate() const { return rotate; }

	public:
		const SVGLengthList & getX() const { return x.getValue().getAnimatedVal().getValue(); }
		void setX(const SVGLengthList& n)  { x.getValue().getAnimatedVal().setValue(n); x.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLengthList & getY() const { return y.getValue().getAnimatedVal().getValue(); }
		void setY(const SVGLengthList& n)  { y.getValue().getAnimatedVal().setValue(n); y.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLengthList & getDx() const { return dx.getValue().getAnimatedVal().getValue(); }
		void setDx(const SVGLengthList& n)  { dx.getValue().getAnimatedVal().setValue(n); dx.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLengthList & getDy() const { return dy.getValue().getAnimatedVal().getValue(); }
		void setDy(const SVGLengthList& n)  { dy.getValue().getAnimatedVal().setValue(n); dy.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGNumberList & getRotate() const { return rotate.getValue().getAnimatedVal().getValue(); }
		void setRotate(const SVGNumberList& n)  { rotate.getValue().getAnimatedVal().setValue(n); rotate.getValue().getBaseVal().setValue(n);  setDamaged(true); }

	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGTextPositioningElement();
		SVGTextPositioningElement(dom::Document* doc, unicode::String* tagName) : SVGTextContentElement(doc, tagName) {}
	};
}


#endif // __svg_SVGTextPositioningElement__
