
#ifndef __makeEnumType__
#define __makeEnumType__
// generated by genAttributeParser.py

#include <w3c/svg/strings.hpp>
#include <w3c/svg/String.hpp>
#include <w3c/svg/SVGFETurbulenceElement.hpp>
#include <w3c/svg/SVGURIReference.hpp>
#include <w3c/svg/SVGLangSpace.hpp>
#include <w3c/svg/SVGTextContentElement.hpp>
#include <w3c/svg/SVGTextPathElement.hpp>
#include <w3c/svg/SVGAnimationElement.hpp>
#include <w3c/svg/SVGMarkerElement.hpp>
#include <w3c/svg/SVGRenderingIntent.hpp>
#include <w3c/svg/SVGFEBlendElement.hpp>
#include <w3c/svg/SVGFEColorMatrixElement.hpp>
#include <w3c/svg/SVGUnitTypes.hpp>
#include <w3c/svg/SVGGradientElement.hpp>
#include <w3c/svg/SVGComponentTransferFunctionElement.hpp>
#include <w3c/svg/SVGFEConvolveMatrixElement.hpp>
#include <w3c/svg/SVGFEDisplacementMapElement.hpp>
#include <w3c/svg/SVGAElement.hpp>
#include <w3c/svg/SVGFECompositeElement.hpp>
#include <w3c/svg/SVGFEMorphologyElement.hpp>
#include <w3c/svg/SVGZoomAndPan.hpp>
#include <w3c/svg/SVGAnimateTransformElement.hpp>


#include <iostream>
namespace svgl {

svg::SVGFETurbulenceElement::SVG_STITCHTYPE
make_SVGFETurbulenceElement_SVG_STITCHTYPE(const svg::String& s);

const svg::String&
print_SVGFETurbulenceElement_SVG_STITCHTYPE(svg::SVGFETurbulenceElement::SVG_STITCHTYPE val);

svg::SVGFETurbulenceElement::SVG_TURBULENCE_TYPE
make_SVGFETurbulenceElement_SVG_TURBULENCE_TYPE(const svg::String& s);

const svg::String&
print_SVGFETurbulenceElement_SVG_TURBULENCE_TYPE(svg::SVGFETurbulenceElement::SVG_TURBULENCE_TYPE val);

svg::SVGURIReference::SVG_XLINK_TYPE
make_SVGURIReference_SVG_XLINK_TYPE(const svg::String& s);

const svg::String&
print_SVGURIReference_SVG_XLINK_TYPE(svg::SVGURIReference::SVG_XLINK_TYPE val);

svg::SVGURIReference::SVG_XLINK_SHOW
make_SVGURIReference_SVG_XLINK_SHOW(const svg::String& s);

const svg::String&
print_SVGURIReference_SVG_XLINK_SHOW(svg::SVGURIReference::SVG_XLINK_SHOW val);

svg::SVGURIReference::SVG_XLINK_ACTUATE
make_SVGURIReference_SVG_XLINK_ACTUATE(const svg::String& s);

const svg::String&
print_SVGURIReference_SVG_XLINK_ACTUATE(svg::SVGURIReference::SVG_XLINK_ACTUATE val);

svg::SVGLangSpace::SVG_XML_SPACE
make_SVGLangSpace_SVG_XML_SPACE(const svg::String& s);

const svg::String&
print_SVGLangSpace_SVG_XML_SPACE(svg::SVGLangSpace::SVG_XML_SPACE val);

svg::SVGTextContentElement::LENGTHADJUST
make_SVGTextContentElement_LENGTHADJUST(const svg::String& s);

const svg::String&
print_SVGTextContentElement_LENGTHADJUST(svg::SVGTextContentElement::LENGTHADJUST val);

svg::SVGTextPathElement::TEXTPATH_METHODTYPE
make_SVGTextPathElement_TEXTPATH_METHODTYPE(const svg::String& s);

const svg::String&
print_SVGTextPathElement_TEXTPATH_METHODTYPE(svg::SVGTextPathElement::TEXTPATH_METHODTYPE val);

svg::SVGTextPathElement::TEXTPATH_SPACINGTYPE
make_SVGTextPathElement_TEXTPATH_SPACINGTYPE(const svg::String& s);

const svg::String&
print_SVGTextPathElement_TEXTPATH_SPACINGTYPE(svg::SVGTextPathElement::TEXTPATH_SPACINGTYPE val);

svg::SVGAnimationElement::SVG_ANIMATION_ATTRIBUTE_TYPE
make_SVGAnimationElement_SVG_ANIMATION_ATTRIBUTE_TYPE(const svg::String& s);

const svg::String&
print_SVGAnimationElement_SVG_ANIMATION_ATTRIBUTE_TYPE(svg::SVGAnimationElement::SVG_ANIMATION_ATTRIBUTE_TYPE val);

svg::SVGAnimationElement::SVG_ANIMATION_RESTART
make_SVGAnimationElement_SVG_ANIMATION_RESTART(const svg::String& s);

const svg::String&
print_SVGAnimationElement_SVG_ANIMATION_RESTART(svg::SVGAnimationElement::SVG_ANIMATION_RESTART val);

svg::SVGAnimationElement::SVG_ANIMATION_FILL
make_SVGAnimationElement_SVG_ANIMATION_FILL(const svg::String& s);

const svg::String&
print_SVGAnimationElement_SVG_ANIMATION_FILL(svg::SVGAnimationElement::SVG_ANIMATION_FILL val);

svg::SVGMarkerElement::SVG_MARKERUNITS
make_SVGMarkerElement_SVG_MARKERUNITS(const svg::String& s);

const svg::String&
print_SVGMarkerElement_SVG_MARKERUNITS(svg::SVGMarkerElement::SVG_MARKERUNITS val);

svg::SVGRenderingIntent::RENDERING_INTENT
make_SVGRenderingIntent_RENDERING_INTENT(const svg::String& s);

const svg::String&
print_SVGRenderingIntent_RENDERING_INTENT(svg::SVGRenderingIntent::RENDERING_INTENT val);

svg::SVGFEBlendElement::SVG_FEBLEND_MODE
make_SVGFEBlendElement_SVG_FEBLEND_MODE(const svg::String& s);

const svg::String&
print_SVGFEBlendElement_SVG_FEBLEND_MODE(svg::SVGFEBlendElement::SVG_FEBLEND_MODE val);

svg::SVGFEColorMatrixElement::SVG_FECOLORMATRIX_TYPE
make_SVGFEColorMatrixElement_SVG_FECOLORMATRIX_TYPE(const svg::String& s);

const svg::String&
print_SVGFEColorMatrixElement_SVG_FECOLORMATRIX_TYPE(svg::SVGFEColorMatrixElement::SVG_FECOLORMATRIX_TYPE val);

svg::SVGUnitTypes::SVG_UNIT_TYPE
make_SVGUnitTypes_SVG_UNIT_TYPE(const svg::String& s);

const svg::String&
print_SVGUnitTypes_SVG_UNIT_TYPE(svg::SVGUnitTypes::SVG_UNIT_TYPE val);

svg::SVGGradientElement::SVG_SPREADMETHOD
make_SVGGradientElement_SVG_SPREADMETHOD(const svg::String& s);

const svg::String&
print_SVGGradientElement_SVG_SPREADMETHOD(svg::SVGGradientElement::SVG_SPREADMETHOD val);

svg::SVGComponentTransferFunctionElement::SVG_FECOMPONENTTRANSFER_TYPE
make_SVGComponentTransferFunctionElement_SVG_FECOMPONENTTRANSFER_TYPE(const svg::String& s);

const svg::String&
print_SVGComponentTransferFunctionElement_SVG_FECOMPONENTTRANSFER_TYPE(svg::SVGComponentTransferFunctionElement::SVG_FECOMPONENTTRANSFER_TYPE val);

svg::SVGFEConvolveMatrixElement::SVG_EDGEMODE
make_SVGFEConvolveMatrixElement_SVG_EDGEMODE(const svg::String& s);

const svg::String&
print_SVGFEConvolveMatrixElement_SVG_EDGEMODE(svg::SVGFEConvolveMatrixElement::SVG_EDGEMODE val);

svg::SVGFEDisplacementMapElement::SVG_CHANNEL
make_SVGFEDisplacementMapElement_SVG_CHANNEL(const svg::String& s);

const svg::String&
print_SVGFEDisplacementMapElement_SVG_CHANNEL(svg::SVGFEDisplacementMapElement::SVG_CHANNEL val);

svg::SVGAElement::SVG_XLINK_SHOW
make_SVGAElement_SVG_XLINK_SHOW(const svg::String& s);

const svg::String&
print_SVGAElement_SVG_XLINK_SHOW(svg::SVGAElement::SVG_XLINK_SHOW val);

svg::SVGFECompositeElement::SVG_FECOMPOSITE_OPERATOR
make_SVGFECompositeElement_SVG_FECOMPOSITE_OPERATOR(const svg::String& s);

const svg::String&
print_SVGFECompositeElement_SVG_FECOMPOSITE_OPERATOR(svg::SVGFECompositeElement::SVG_FECOMPOSITE_OPERATOR val);

svg::SVGFEMorphologyElement::SVG_MORPHOLOGY_OPERATOR
make_SVGFEMorphologyElement_SVG_MORPHOLOGY_OPERATOR(const svg::String& s);

const svg::String&
print_SVGFEMorphologyElement_SVG_MORPHOLOGY_OPERATOR(svg::SVGFEMorphologyElement::SVG_MORPHOLOGY_OPERATOR val);

svg::SVGZoomAndPan::SVG_ZOOMANDPAN
make_SVGZoomAndPan_SVG_ZOOMANDPAN(const svg::String& s);

const svg::String&
print_SVGZoomAndPan_SVG_ZOOMANDPAN(svg::SVGZoomAndPan::SVG_ZOOMANDPAN val);

svg::SVGAnimateTransformElement::SVG_ANIMATETRANSFORM_TYPE
make_SVGAnimateTransformElement_SVG_ANIMATETRANSFORM_TYPE(const svg::String& s);

const svg::String&
print_SVGAnimateTransformElement_SVG_ANIMATETRANSFORM_TYPE(svg::SVGAnimateTransformElement::SVG_ANIMATETRANSFORM_TYPE val);


inline
void
read(const svg::String& in, svg::SVGFETurbulenceElement::SVG_STITCHTYPE& e)
{
  e = svgl::make_SVGFETurbulenceElement_SVG_STITCHTYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGFETurbulenceElement::SVG_TURBULENCE_TYPE& e)
{
  e = svgl::make_SVGFETurbulenceElement_SVG_TURBULENCE_TYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGURIReference::SVG_XLINK_TYPE& e)
{
  e = svgl::make_SVGURIReference_SVG_XLINK_TYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGURIReference::SVG_XLINK_SHOW& e)
{
  e = svgl::make_SVGURIReference_SVG_XLINK_SHOW(in);
}


inline
void
read(const svg::String& in, svg::SVGURIReference::SVG_XLINK_ACTUATE& e)
{
  e = svgl::make_SVGURIReference_SVG_XLINK_ACTUATE(in);
}


inline
void
read(const svg::String& in, svg::SVGLangSpace::SVG_XML_SPACE& e)
{
  e = svgl::make_SVGLangSpace_SVG_XML_SPACE(in);
}


inline
void
read(const svg::String& in, svg::SVGTextContentElement::LENGTHADJUST& e)
{
  e = svgl::make_SVGTextContentElement_LENGTHADJUST(in);
}


inline
void
read(const svg::String& in, svg::SVGTextPathElement::TEXTPATH_METHODTYPE& e)
{
  e = svgl::make_SVGTextPathElement_TEXTPATH_METHODTYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGTextPathElement::TEXTPATH_SPACINGTYPE& e)
{
  e = svgl::make_SVGTextPathElement_TEXTPATH_SPACINGTYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGAnimationElement::SVG_ANIMATION_ATTRIBUTE_TYPE& e)
{
  e = svgl::make_SVGAnimationElement_SVG_ANIMATION_ATTRIBUTE_TYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGAnimationElement::SVG_ANIMATION_RESTART& e)
{
  e = svgl::make_SVGAnimationElement_SVG_ANIMATION_RESTART(in);
}


inline
void
read(const svg::String& in, svg::SVGAnimationElement::SVG_ANIMATION_FILL& e)
{
  e = svgl::make_SVGAnimationElement_SVG_ANIMATION_FILL(in);
}


inline
void
read(const svg::String& in, svg::SVGMarkerElement::SVG_MARKERUNITS& e)
{
  e = svgl::make_SVGMarkerElement_SVG_MARKERUNITS(in);
}


inline
void
read(const svg::String& in, svg::SVGRenderingIntent::RENDERING_INTENT& e)
{
  e = svgl::make_SVGRenderingIntent_RENDERING_INTENT(in);
}


inline
void
read(const svg::String& in, svg::SVGFEBlendElement::SVG_FEBLEND_MODE& e)
{
  e = svgl::make_SVGFEBlendElement_SVG_FEBLEND_MODE(in);
}


inline
void
read(const svg::String& in, svg::SVGFEColorMatrixElement::SVG_FECOLORMATRIX_TYPE& e)
{
  e = svgl::make_SVGFEColorMatrixElement_SVG_FECOLORMATRIX_TYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGUnitTypes::SVG_UNIT_TYPE& e)
{
  e = svgl::make_SVGUnitTypes_SVG_UNIT_TYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGGradientElement::SVG_SPREADMETHOD& e)
{
  e = svgl::make_SVGGradientElement_SVG_SPREADMETHOD(in);
}


inline
void
read(const svg::String& in, svg::SVGComponentTransferFunctionElement::SVG_FECOMPONENTTRANSFER_TYPE& e)
{
  e = svgl::make_SVGComponentTransferFunctionElement_SVG_FECOMPONENTTRANSFER_TYPE(in);
}


inline
void
read(const svg::String& in, svg::SVGFEConvolveMatrixElement::SVG_EDGEMODE& e)
{
  e = svgl::make_SVGFEConvolveMatrixElement_SVG_EDGEMODE(in);
}


inline
void
read(const svg::String& in, svg::SVGFEDisplacementMapElement::SVG_CHANNEL& e)
{
  e = svgl::make_SVGFEDisplacementMapElement_SVG_CHANNEL(in);
}


inline
void
read(const svg::String& in, svg::SVGAElement::SVG_XLINK_SHOW& e)
{
  e = svgl::make_SVGAElement_SVG_XLINK_SHOW(in);
}


inline
void
read(const svg::String& in, svg::SVGFECompositeElement::SVG_FECOMPOSITE_OPERATOR& e)
{
  e = svgl::make_SVGFECompositeElement_SVG_FECOMPOSITE_OPERATOR(in);
}


inline
void
read(const svg::String& in, svg::SVGFEMorphologyElement::SVG_MORPHOLOGY_OPERATOR& e)
{
  e = svgl::make_SVGFEMorphologyElement_SVG_MORPHOLOGY_OPERATOR(in);
}


inline
void
read(const svg::String& in, svg::SVGZoomAndPan::SVG_ZOOMANDPAN& e)
{
  e = svgl::make_SVGZoomAndPan_SVG_ZOOMANDPAN(in);
}


inline
void
read(const svg::String& in, svg::SVGAnimateTransformElement::SVG_ANIMATETRANSFORM_TYPE& e)
{
  e = svgl::make_SVGAnimateTransformElement_SVG_ANIMATETRANSFORM_TYPE(in);
}



inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFETurbulenceElement::SVG_STITCHTYPE& val)
{
   out << svgl::print_SVGFETurbulenceElement_SVG_STITCHTYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFETurbulenceElement::SVG_TURBULENCE_TYPE& val)
{
   out << svgl::print_SVGFETurbulenceElement_SVG_TURBULENCE_TYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGURIReference::SVG_XLINK_TYPE& val)
{
   out << svgl::print_SVGURIReference_SVG_XLINK_TYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGURIReference::SVG_XLINK_SHOW& val)
{
   out << svgl::print_SVGURIReference_SVG_XLINK_SHOW(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGURIReference::SVG_XLINK_ACTUATE& val)
{
   out << svgl::print_SVGURIReference_SVG_XLINK_ACTUATE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGLangSpace::SVG_XML_SPACE& val)
{
   out << svgl::print_SVGLangSpace_SVG_XML_SPACE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGTextContentElement::LENGTHADJUST& val)
{
   out << svgl::print_SVGTextContentElement_LENGTHADJUST(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGTextPathElement::TEXTPATH_METHODTYPE& val)
{
   out << svgl::print_SVGTextPathElement_TEXTPATH_METHODTYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGTextPathElement::TEXTPATH_SPACINGTYPE& val)
{
   out << svgl::print_SVGTextPathElement_TEXTPATH_SPACINGTYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGAnimationElement::SVG_ANIMATION_ATTRIBUTE_TYPE& val)
{
   out << svgl::print_SVGAnimationElement_SVG_ANIMATION_ATTRIBUTE_TYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGAnimationElement::SVG_ANIMATION_RESTART& val)
{
   out << svgl::print_SVGAnimationElement_SVG_ANIMATION_RESTART(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGAnimationElement::SVG_ANIMATION_FILL& val)
{
   out << svgl::print_SVGAnimationElement_SVG_ANIMATION_FILL(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGMarkerElement::SVG_MARKERUNITS& val)
{
   out << svgl::print_SVGMarkerElement_SVG_MARKERUNITS(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGRenderingIntent::RENDERING_INTENT& val)
{
   out << svgl::print_SVGRenderingIntent_RENDERING_INTENT(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFEBlendElement::SVG_FEBLEND_MODE& val)
{
   out << svgl::print_SVGFEBlendElement_SVG_FEBLEND_MODE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFEColorMatrixElement::SVG_FECOLORMATRIX_TYPE& val)
{
   out << svgl::print_SVGFEColorMatrixElement_SVG_FECOLORMATRIX_TYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGUnitTypes::SVG_UNIT_TYPE& val)
{
   out << svgl::print_SVGUnitTypes_SVG_UNIT_TYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGGradientElement::SVG_SPREADMETHOD& val)
{
   out << svgl::print_SVGGradientElement_SVG_SPREADMETHOD(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGComponentTransferFunctionElement::SVG_FECOMPONENTTRANSFER_TYPE& val)
{
   out << svgl::print_SVGComponentTransferFunctionElement_SVG_FECOMPONENTTRANSFER_TYPE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFEConvolveMatrixElement::SVG_EDGEMODE& val)
{
   out << svgl::print_SVGFEConvolveMatrixElement_SVG_EDGEMODE(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFEDisplacementMapElement::SVG_CHANNEL& val)
{
   out << svgl::print_SVGFEDisplacementMapElement_SVG_CHANNEL(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGAElement::SVG_XLINK_SHOW& val)
{
   out << svgl::print_SVGAElement_SVG_XLINK_SHOW(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFECompositeElement::SVG_FECOMPOSITE_OPERATOR& val)
{
   out << svgl::print_SVGFECompositeElement_SVG_FECOMPOSITE_OPERATOR(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGFEMorphologyElement::SVG_MORPHOLOGY_OPERATOR& val)
{
   out << svgl::print_SVGFEMorphologyElement_SVG_MORPHOLOGY_OPERATOR(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGZoomAndPan::SVG_ZOOMANDPAN& val)
{
   out << svgl::print_SVGZoomAndPan_SVG_ZOOMANDPAN(val);
   return out;
}


inline
std::ostream&
operator << (std::ostream& out, const svg::SVGAnimateTransformElement::SVG_ANIMATETRANSFORM_TYPE& val)
{
   out << svgl::print_SVGAnimateTransformElement_SVG_ANIMATETRANSFORM_TYPE(val);
   return out;
}


}
#endif //__makeEnumType__
