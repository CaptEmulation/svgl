#ifndef __svg_SVGFEDiffuseLightingElement__
#define __svg_SVGFEDiffuseLightingElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
}

#include <w3c/svg/SVGElement.hpp>
#include <w3c/svg/SVGStylable.hpp>
#include <w3c/svg/SVGFilterPrimitiveStandardAttributes.hpp>
#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/SVGAnimatedString.hpp>
#include <w3c/svg/SVGAnimatedNumber.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGFEDiffuseLightingElement_element_string;
}

namespace svg {
	class SVGFEDiffuseLightingElement :
		public SVGElement,
		public SVGStylable,
		public SVGFilterPrimitiveStandardAttributes {
	public:
	protected:
		Attribute< SVGAnimatedString > in1;
		Attribute< SVGAnimatedNumber > surfaceScale;
		Attribute< SVGAnimatedNumber > diffuseConstant;
	public:
		const Attribute< SVGAnimatedString >& dom_getIn1() const { return in1; }

		const Attribute< SVGAnimatedNumber >& dom_getSurfaceScale() const { return surfaceScale; }

		const Attribute< SVGAnimatedNumber >& dom_getDiffuseConstant() const { return diffuseConstant; }

	public:
		const SVGString & getIn1() const { return in1.getValue().getAnimatedVal().getValue(); }
		void setIn1(const SVGString& n)  { in1.getValue().getAnimatedVal().setValue(n); in1.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGNumber & getSurfaceScale() const { return surfaceScale.getValue().getAnimatedVal().getValue(); }
		void setSurfaceScale(const SVGNumber& n)  { surfaceScale.getValue().getAnimatedVal().setValue(n); surfaceScale.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGNumber & getDiffuseConstant() const { return diffuseConstant.getValue().getAnimatedVal().getValue(); }
		void setDiffuseConstant(const SVGNumber& n)  { diffuseConstant.getValue().getAnimatedVal().setValue(n); diffuseConstant.getValue().getBaseVal().setValue(n);  setDamaged(true); }

	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGFEDiffuseLightingElement();
		virtual const String getDtdElement() const { return SVGFEDiffuseLightingElement_element_string; }
		SVGFEDiffuseLightingElement(dom::Document* doc) : SVGElement(doc, SVGFEDiffuseLightingElement_element_string) {}
	};
}


#endif // __svg_SVGFEDiffuseLightingElement__
