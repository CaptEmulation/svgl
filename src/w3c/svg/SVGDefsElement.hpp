#ifndef __svg_SVGDefsElement__
#define __svg_SVGDefsElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
	class Context;
	class GLInfo;
}

#include <w3c/svg/SVGElement.hpp>
#include <w3c/svg/SVGTests.hpp>
#include <w3c/svg/SVGLangSpace.hpp>
#include <w3c/svg/SVGExternalResourcesRequired.hpp>
#include <w3c/svg/SVGStylable.hpp>
#include <w3c/svg/SVGTransformable.hpp>
#include <w3c/events/EventTarget.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGDefsElement_element_string;
}

namespace svg {
	class SVGDefsElement :
		public SVGElement,
		public SVGTests,
		public SVGLangSpace,
		public SVGExternalResourcesRequired,
		public SVGStylable,
		public SVGTransformable,
		public events::EventTarget {
	public:

		virtual void glTraverse(svgl::Context*, svgl::GLInfo*)  ;

		virtual void pickTraverse(svgl::Context*, svgl::GLInfo*)  ;
	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGDefsElement();
		virtual const String getDtdElement() const { return SVGDefsElement_element_string; }
		SVGDefsElement(dom::Document* doc) : SVGElement(doc, SVGDefsElement_element_string) {}
	};
}


#endif // __svg_SVGDefsElement__
