#ifndef __svg_SVGAltGlyphElement__
#define __svg_SVGAltGlyphElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
	class Context;
	class GLInfo;
	class TextInfo;
}

namespace dom {
	class Text;
}

#include <w3c/svg/SVGTextPositioningElement.hpp>
#include <w3c/svg/SVGURIReference.hpp>
#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/DOMString.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGAltGlyphElement_element_string;
}

namespace svg {
	class SVGAltGlyphElement :
		public SVGTextPositioningElement,
		public SVGURIReference {
	public:
	protected:
		Attribute< DOMString > glyphRef;
		Attribute< DOMString > format;
	public:
		const Attribute< DOMString >& dom_getGlyphRef() const { return glyphRef; }
		Attribute< DOMString >& dom_getGlyphRef() { return glyphRef; }
		void dom_setGlyphRef(const DOMString& n)  { glyphRef.setValue(n); }

		const Attribute< DOMString >& dom_getFormat() const { return format; }
		Attribute< DOMString >& dom_getFormat() { return format; }
		void dom_setFormat(const DOMString& n)  { format.setValue(n); }

	public:
		const DOMString & getGlyphRef() const { return glyphRef.getValue(); }
		DOMString & getGlyphRef() { return glyphRef.getValue(); }
		void setGlyphRef(const DOMString& n)  { glyphRef.setValue(n);  setDamaged(true); }

		const DOMString & getFormat() const { return format.getValue(); }
		DOMString & getFormat() { return format.getValue(); }
		void setFormat(const DOMString& n)  { format.setValue(n);  setDamaged(true); }


    public:
		virtual void glTextTraverse(svgl::Context*, svgl::GLInfo*, svgl::TextInfo*) ;
		virtual void glTextTraversePCDATA(svgl::Context*, svgl::GLInfo*, svgl::TextInfo*, dom::Text*) ;

	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGAltGlyphElement();
		virtual const String getDtdElement() const { return SVGAltGlyphElement_element_string; }
		SVGAltGlyphElement(dom::Document* doc) : SVGTextPositioningElement(doc, SVGAltGlyphElement_element_string) {}
	};
}


#endif // __svg_SVGAltGlyphElement__
