#ifndef __svg_SVGFEMergeElement__
#define __svg_SVGFEMergeElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
	class SVGElement;
}

namespace svgl {
	class AnimateAdapter;
	class Context;
	class GLInfo;
	class FilterContext;
}

#include <w3c/svg/SVGElement.hpp>
#include <w3c/svg/SVGFilterPrimitiveStandardAttributes.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGFEMergeElement_element_string;
}

namespace svg {
	class SVGFEMergeElement :
		public SVGElement,
		public SVGFilterPrimitiveStandardAttributes {
	public:

		virtual void glPreTraverse(svgl::Context*, svgl::GLInfo*, SVGElement* elem, svgl::FilterContext*)  ;
		virtual void glPostTraverse(svgl::Context*, svgl::GLInfo*, SVGElement* elem, svgl::FilterContext*)  ;
		virtual unicode::String* getOptionalIn1();
		virtual unicode::String* getOptionalIn2();
		virtual unicode::String* getOptionalResult();

	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGFEMergeElement();
		virtual const String getDtdElement() const { return SVGFEMergeElement_element_string; }
		SVGFEMergeElement(dom::Document* doc) : SVGElement(doc, SVGFEMergeElement_element_string) {}
	};
}


#endif // __svg_SVGFEMergeElement__
