#ifndef __svg_SVGScriptElement__
#define __svg_SVGScriptElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
}

#include <w3c/svg/SVGElement.hpp>
#include <w3c/svg/SVGURIReference.hpp>
#include <w3c/svg/SVGExternalResourcesRequired.hpp>
#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/DOMString.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGScriptElement_element_string;
}

namespace svg {
	class SVGScriptElement :
		public SVGElement,
		public SVGURIReference,
		public SVGExternalResourcesRequired {
	public:
	protected:
		Attribute< DOMString > type;
	public:
		const Attribute< DOMString >& dom_getType() const { return type; }
		Attribute< DOMString >& dom_getType() { return type; }
		void dom_setType(const DOMString& n)  { type.setValue(n); }

	public:
		const DOMString & getType() const { return type.getValue(); }
		DOMString & getType() { return type.getValue(); }
		void setType(const DOMString& n)  { type.setValue(n);  setDamaged(true); }

	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGScriptElement();
		virtual const String getDtdElement() const { return SVGScriptElement_element_string; }
		SVGScriptElement(dom::Document* doc) : SVGElement(doc, SVGScriptElement_element_string) {}
	};
}


#endif // __svg_SVGScriptElement__
