#ifndef __svg_SVGURIReference__
#define __svg_SVGURIReference__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
}

#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/DOMString.hpp>
#include <w3c/svg/SVGAnimatedString.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
	class SVGURIReference {
	public:

		enum SVG_XLINK_TYPE {
			SVG_XLINK_TYPE_UNKNOWN = 0,
			SVG_XLINK_TYPE_SIMPLE = 1,
			SVG_XLINK_TYPE_EXTENDED = 2,
			SVG_XLINK_TYPE_LOCATOR = 3,
			SVG_XLINK_TYPE_ARC = 4
		};


		enum SVG_XLINK_SHOW {
			SVG_XLINK_SHOW_UNKNOWN = 0,
			SVG_XLINK_SHOW_EMBED = 1
		};


		enum SVG_XLINK_ACTUATE {
			SVG_XLINK_ACTUATE_UNKNOWN = 0,
			SVG_XLINK_ACTUATE_ONREQUEST = 1,
			SVG_XLINK_ACTUATE_ONLOAD = 2
		};

	protected:
		Attribute< SVG_XLINK_TYPE > xlinkType;
		Attribute< DOMString > xlinkRole;
		Attribute< DOMString > xlinkArcRole;
		Attribute< DOMString > xlinkTitle;
		Attribute< SVG_XLINK_SHOW > xlinkShow;
		Attribute< SVG_XLINK_ACTUATE > xlinkActuate;
		Attribute< SVGAnimatedString > href;
	public:
		const Attribute< SVG_XLINK_TYPE >& dom_getXlinkType() const { return xlinkType; }
		Attribute< SVG_XLINK_TYPE >& dom_getXlinkType() { return xlinkType; }
		void dom_setXlinkType(const SVG_XLINK_TYPE& n)  { xlinkType.setValue(n); }

		const Attribute< DOMString >& dom_getXlinkRole() const { return xlinkRole; }
		Attribute< DOMString >& dom_getXlinkRole() { return xlinkRole; }
		void dom_setXlinkRole(const DOMString& n)  { xlinkRole.setValue(n); }

		const Attribute< DOMString >& dom_getXlinkArcRole() const { return xlinkArcRole; }
		Attribute< DOMString >& dom_getXlinkArcRole() { return xlinkArcRole; }
		void dom_setXlinkArcRole(const DOMString& n)  { xlinkArcRole.setValue(n); }

		const Attribute< DOMString >& dom_getXlinkTitle() const { return xlinkTitle; }
		Attribute< DOMString >& dom_getXlinkTitle() { return xlinkTitle; }
		void dom_setXlinkTitle(const DOMString& n)  { xlinkTitle.setValue(n); }

		const Attribute< SVG_XLINK_SHOW >& dom_getXlinkShow() const { return xlinkShow; }
		Attribute< SVG_XLINK_SHOW >& dom_getXlinkShow() { return xlinkShow; }
		void dom_setXlinkShow(const SVG_XLINK_SHOW& n)  { xlinkShow.setValue(n); }

		const Attribute< SVG_XLINK_ACTUATE >& dom_getXlinkActuate() const { return xlinkActuate; }
		Attribute< SVG_XLINK_ACTUATE >& dom_getXlinkActuate() { return xlinkActuate; }
		void dom_setXlinkActuate(const SVG_XLINK_ACTUATE& n)  { xlinkActuate.setValue(n); }

		const Attribute< SVGAnimatedString >& dom_getHref() const { return href; }

	public:
		const SVG_XLINK_TYPE & getXlinkType() const { return xlinkType.getValue(); }
		SVG_XLINK_TYPE & getXlinkType() { return xlinkType.getValue(); }
		void setXlinkType(const SVG_XLINK_TYPE& n)  { xlinkType.setValue(n); }

		const DOMString & getXlinkRole() const { return xlinkRole.getValue(); }
		DOMString & getXlinkRole() { return xlinkRole.getValue(); }
		void setXlinkRole(const DOMString& n)  { xlinkRole.setValue(n); }

		const DOMString & getXlinkArcRole() const { return xlinkArcRole.getValue(); }
		DOMString & getXlinkArcRole() { return xlinkArcRole.getValue(); }
		void setXlinkArcRole(const DOMString& n)  { xlinkArcRole.setValue(n); }

		const DOMString & getXlinkTitle() const { return xlinkTitle.getValue(); }
		DOMString & getXlinkTitle() { return xlinkTitle.getValue(); }
		void setXlinkTitle(const DOMString& n)  { xlinkTitle.setValue(n); }

		const SVG_XLINK_SHOW & getXlinkShow() const { return xlinkShow.getValue(); }
		SVG_XLINK_SHOW & getXlinkShow() { return xlinkShow.getValue(); }
		void setXlinkShow(const SVG_XLINK_SHOW& n)  { xlinkShow.setValue(n); }

		const SVG_XLINK_ACTUATE & getXlinkActuate() const { return xlinkActuate.getValue(); }
		SVG_XLINK_ACTUATE & getXlinkActuate() { return xlinkActuate.getValue(); }
		void setXlinkActuate(const SVG_XLINK_ACTUATE& n)  { xlinkActuate.setValue(n); }

		const SVGString & getHref() const { return href.getValue().getAnimatedVal().getValue(); }
		void setHref(const SVGString& n)  { href.getValue().getAnimatedVal().setValue(n); href.getValue().getBaseVal().setValue(n); }


	public:
		void setHref(const char*);

	public:
		virtual ~SVGURIReference() {}
	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);
	};
}


#endif // __svg_SVGURIReference__
