#ifndef __svg_SVGFEMorphologyElement__
#define __svg_SVGFEMorphologyElement__

// generated by genFromIdl.py
	class xmlostream;

namespace svg {
}

namespace svgl {
	class AnimateAdapter;
}

#include <w3c/svg/SVGElement.hpp>
#include <w3c/svg/SVGFilterPrimitiveStandardAttributes.hpp>
#include <w3c/svg/Attribute.hpp>
#include <w3c/svg/SVGAnimatedString.hpp>
#include <w3c/svg/SVGAnimatedLength.hpp>
#include <w3c/svg/String.hpp>

namespace svg {
            extern unicode::String * SVGFEMorphologyElement_element_string;
}

namespace svg {
	class SVGFEMorphologyElement :
		public SVGElement,
		public SVGFilterPrimitiveStandardAttributes {
	public:

		enum SVG_MORPHOLOGY_OPERATOR {
			SVG_MORPHOLOGY_OPERATOR_UNKNOWN = 0,
			SVG_MORPHOLOGY_OPERATOR_ERODE = 1,
			SVG_MORPHOLOGY_OPERATOR_DILATE = 2
		};

	protected:
		Attribute< SVGAnimatedString > in1;
		Attribute< Animated<SVG_MORPHOLOGY_OPERATOR> > operator_;
		Attribute< SVGAnimatedLength > radiusX;
		Attribute< SVGAnimatedLength > radiusY;
	public:
		const Attribute< SVGAnimatedString >& dom_getIn1() const { return in1; }

		const Attribute< Animated<SVG_MORPHOLOGY_OPERATOR> >& dom_getOperator() const { return operator_; }

		const Attribute< SVGAnimatedLength >& dom_getRadiusX() const { return radiusX; }

		const Attribute< SVGAnimatedLength >& dom_getRadiusY() const { return radiusY; }

	public:
		const SVGString & getIn1() const { return in1.getValue().getAnimatedVal().getValue(); }
		void setIn1(const SVGString& n)  { in1.getValue().getAnimatedVal().setValue(n); in1.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVG_MORPHOLOGY_OPERATOR & getOperator() const { return operator_.getValue().getAnimatedVal().getValue(); }
		void setOperator(const SVG_MORPHOLOGY_OPERATOR& n)  { operator_.getValue().getAnimatedVal().setValue(n); operator_.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLength & getRadiusX() const { return radiusX.getValue().getAnimatedVal().getValue(); }
		void setRadiusX(const SVGLength& n)  { radiusX.getValue().getAnimatedVal().setValue(n); radiusX.getValue().getBaseVal().setValue(n);  setDamaged(true); }

		const SVGLength & getRadiusY() const { return radiusY.getValue().getAnimatedVal().getValue(); }
		void setRadiusY(const SVGLength& n)  { radiusY.getValue().getAnimatedVal().setValue(n); radiusY.getValue().getBaseVal().setValue(n);  setDamaged(true); }

	public:
		virtual int parse_attributes(const String&, const String&);
		virtual void print_attributes(xmlostream&);
	public:
		virtual svgl::AnimateAdapter* getAttributeByName(const String&);

	public:
		virtual ~SVGFEMorphologyElement();
		virtual const String getDtdElement() const { return SVGFEMorphologyElement_element_string; }
		SVGFEMorphologyElement(dom::Document* doc) : SVGElement(doc, SVGFEMorphologyElement_element_string) {}
	};
}


#endif // __svg_SVGFEMorphologyElement__
